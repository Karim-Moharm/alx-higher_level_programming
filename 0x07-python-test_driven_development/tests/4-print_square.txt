The 4-print_square.py Module Test Cases
=========================================

``print_square`` Function
-----------------------------------------

'Importing the Module'
>>> print_square = __import__('4-print_square').print_square

'Test #1 Normal int number'
>>> print_square(8)
########
########
########
########
########
########
########
########

'Test #2 Float number'
>>> print_square(8.22)
Traceback (most recent call last):
...
TypeError: size must be an integer

'Test #3: negative number'
>>> print_square(-2)
Traceback (most recent call last):
...
ValueError: size must be >= 0

'Test 4#: when size is bool'
>>> print_square(True)
Traceback (most recent call last):
...
TypeError: size must be an integer

'Test #5: size is str'
>>> print_square('8')
Traceback (most recent call last):
...
TypeError: size must be an integer

'Test #6: size is a list'
>>> print_square([2, 3, 4])
Traceback (most recent call last):
...
TypeError: size must be an integer

'Test #7: more than one argument'
>>> print_square(2, 3)
Traceback (most recent call last):
...
TypeError: print_square() takes 1 positional argument but 2 were given

'Test #8: size is 0'
>>> print_square(0)

'Test #9: No argument'
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'

'Test #10: size is a set'
>>> print_square({2, 3})
Traceback (most recent call last):
...
TypeError: size must be an integer
